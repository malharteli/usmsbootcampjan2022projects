server.port=7078
#mysql
spring.datasource.url=jdbc:mysql://localhost:3306/traderdb?useSSL=true
spring.datasource.username=root
spring.datasource.password=vignesh
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
## JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true
## DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.continue-on-error=false
spring.datasource.generate-unique-name=false
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.serialization.fail-on-empty-beans=false
#graphql 
#graphql.tools.schema-location-pattern: **/*.graphqls
nasdaqUrl=https://data.nasdaq.com/api/v3/datasets/MX/BAXX2021
#Resillience4j
management.endpoints.web.exposure.include=*
# Retry object used in RetryingService.basicExample()
resilience4j.retry.instances.traderSearch.maxRetryAttempts=3
resilience4j.retry.instances.readerSearch.waitDuration=2s
      # Retry object used in RetryingService.fallbackExample()
#resilience4j.retry.instances.fallbackExample.maxRetryAttempts=3
#resilience4j.retry.instances.fallbackExample.waitDuration=2s

      # Retry object used in RetryingService.intervalFunctionExponentialExample()
#resilience4j.retry.instances.intervalFunctionExponentialExample.enableExponentialBackoff=true
#resilience4j.retry.instances.intervalFunctionExponentialExample.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.intervalFunctionExponentialExample.maxRetryAttempts=6
#resilience4j.retry.instances.intervalFunctionExponentialExample.waitDuration=1s

      # Retry object used in RetryingService.intervalFunctionRandomExample()
#resilience4j.retry.instances.intervalFunctionRandomExample.enableRandomizedWait=true
#resilience4j.retry.instances.intervalFunctionRandomExample.maxRetryAttempts=3
#resilience4j.retry.instances.intervalFunctionRandomExample.randomizedWaitFactor=0.5
#resilience4j.retry.instances.intervalFunctionRandomExample.waitDuration=2s

      # Retry object used in RetryingService.loggedRetryExample()
#resilience4j.retry.instances.loggedRetryExample.maxRetryAttempts=3
#resilience4j.retry.instances.loggedRetryExample.waitDuration=2s

      # Retry object used in RetryingService.predicateExample()
#resilience4j.retry.instances.predicateExample.maxRetryAttempts=3
#resilience4j.retry.instances.predicateExample.resultPredicate=io.reflectoring.resilience4j.springboot.predicates.ConditionalRetryPredicate
#resilience4j.retry.instances.predicateExample.waitDuration=3s

      # Retry object used in RetryingService.basicExample_serviceThrowingException()
#resilience4j.retry.instances.throwingException.maxRetryAttempts=3
#resilience4j.retry.instances.throwingException.retryExceptions=- java.lang.Exception
#resilience4j.retry.instances.throwingException.waitDuration=2s


  


#Redis specific configurations

#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.password= 